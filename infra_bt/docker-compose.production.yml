version: '3'

volumes:
  pg_data:
  static_data:
  media_data:


services:
  db:
    image: postgres:13.0-alpine
    env_file: .env
    volumes:
      - pg_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"
        ]
      interval: 3s
      timeout: 3s
      retries: 5

  redis:
    image: redis:alpine3.18
    hostname: redis
    expose:
      - 6379
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  backend:
    image: 1yunker/volunteers_backend
    env_file: .env
    volumes:
      - static_data:/backend_static
      - media_data:/app/media
    depends_on:
      db:
        condition: service_healthy

  celery:
    image: 1yunker/volunteers_backend
    env_file: .env
    volumes:
      - static_data:/backend_static
      - media_data:/app/media
    command: celery -A backend.celery_app worker -l info -E
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_started
      redis:
        condition: service_healthy

  celery-beat:
    image: 1yunker/volunteers_backend
    env_file: .env
    volumes:
      - static_data:/backend_static
      - media_data:/app/media
    command: celery -A backend beat -l info
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_started
      redis:
        condition: service_healthy

  frontend:
    image: 1yunker/volunteers_frontend
    command: cp -r /app/. /static_files/
    volumes:
      - static_data:/static_files

  gateway:
    image: 1yunker/volunteers_gateway
    ports:
      - 8000:80
    volumes:
      - static_data:/usr/share/nginx/html
      - media_data:/usr/share/nginx/html/media
    depends_on:
      backend:
        condition: service_started
